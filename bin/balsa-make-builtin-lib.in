#! /bin/sh
#
#	The Balsa Asynchronous Hardware Synthesis System
#	Copyright (C) 1995-2003 Department of Computer Science
#	The University of Manchester, Oxford Road, Manchester, UK, M13 9PL
#	
#	This program is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; either version 2 of the License, or
#	(at your option) any later version.
#	
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#	
#	You should have received a copy of the GNU General Public License
#	along with this program; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#	`balsa-make-builtin-lib'
#	Process the given .c files into .a and .so libraries suitable for
#	use in Balsa builtin function definitions for simulation
#	@configure_input@
#
#	$Id: balsa-make-builtin-lib.in,v 1.6 2003/08/26 21:16:33 bardslea Exp $
#

BALSAINSTALLEDHOME=@prefix@
if [ "${BALSAHOME}" = "" ]; then
	BALSAHOME=${BALSAINSTALLEDHOME}
fi
PATH=${BALSAHOME}:${PATH}

if [ $# -lt 2 ]; then
	balsa-prog-banner balsa-make-builtin-lib 'balsa-make-builtin-lib: Builtin function lib. generator' \
		'2003, The University of Manchester'
	echo "version @VERSION@"
	echo 'usage: balsa-make-builtin-lib [ <switches> ] <libname> ( <compiler-options> <c-files> )+'
	echo
	echo 'switches: -i <rel-path> - compile inside the uninstalled Balsa package. <rel-path> is a relative path'
	echo '                          to the top of the package'
	echo '          -j <dir>      - install in the named directory' 
	echo
	exit 1
fi

INCLUDES=-I.
INSTALLDIR=${PWD}

if [ "$1" = "-i" ]; then
	shift
	RELPATH=$1
	shift
	LIBTOOL=${RELPATH}/libtool
	INSTALL=${RELPATH}/install-sh
else
	INCLUDES="${INCLUDES} -I${BALSAHOME}/include"
	LIBNAME=$1
	LIBTOOL=${BALSAHOME}/bin/libtool
	INSTALL=${BALSAHOME}/bin/install-sh
fi

if [ "$1" = "-j" ]; then
	shift
	INSTALLDIR=$1
	shift
fi

LIBNAME=$1
shift

# Test compilation
echo @CC@ @CFLAGS@ -c ${INCLUDES} -o ${LIBNAME}.o $*
if @CC@ @CFLAGS@ -c ${INCLUDES} -o ${LIBNAME}.o $*
then
	:
else
	echo balsa-make-builtin-lib: compilation failed
	exit 1
fi

if @NM@ -g ${LIBNAME}.o | grep BalsaSim_BuiltinLibrary_${LIBNAME} > /dev/null
then
	:
else
	echo balsa-make-builtin-lib: builtin library sources must include an initialisation
	echo     function created with BALSA_SIM_REGISTER_BUILTIN_LIB
	exit 1
fi

# ${LIBTOOL} --mode=compile @CC@ @CFLAGS@ -c ${INCLUDES} $* -o ${LIBNAME}.lo
${LIBTOOL} --mode=compile @CC@ @CFLAGS@ -c ${INCLUDES} -o ${LIBNAME}.lo $* &&
${LIBTOOL} --mode=link @CC@ @CFLAGS@ -o ${LIBNAME}.la -c ${INCLUDES} ${LIBNAME}.lo -rpath ${INSTALLDIR} -module &&
install -d ${INSTALLDIR} &&
${LIBTOOL} --mode=install ${INSTALL} -c ${LIBNAME}.la ${INSTALLDIR} &&
${LIBTOOL} --mode=finish ${INSTALLDIR}

