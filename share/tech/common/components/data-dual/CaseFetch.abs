(nodes
	("muxOut" (param "width") 0 1)
	("elseAck" 1 0 1)
)
(gates
	(if (complete-encoding? (param "specification") (param "indexWidth"))
		(gates
			(cond
				((style-option "m-of-n-mapping")
					(decode (c-or m-of-n-mapping dual-rail-implicant-mapping)
						(param "specification") 
						(param "indexWidth")
						((ack0 "index") (ack1 "index"))
						((req (each "inp")))
					)
				)
				(else
					(decode (c-or dims m-of-n-mapping dual-rail-implicant-mapping)
						(param "specification") 
						(param "indexWidth")
						((ack0 "index") (ack1 "index"))
						((req (each "inp")))
					)
				)
			)
			(or (ack0 "out") (ack0 (each "inp")))
		)
		(gates
			(cond
				((style-option "m-of-n-mapping")
					(decode (c-or m-of-n-mapping dual-rail-implicant-mapping)
						(param "specification")
						(param "indexWidth")
						((ack0 "index") (ack1 "index"))
						((combine (req (each "inp")) (node "elseAck")))
					)
				)
				(else
					(decode (c-or dims m-of-n-mapping dual-rail-implicant-mapping)
						(param "specification")
						(param "indexWidth")
						((ack0 "index") (ack1 "index"))
						((combine (req (each "inp")) (node "elseAck")))
					)
				)
			)
			(or (ack0 "out") (ack0 (each "inp")) (combine (dup (param "width") (node "elseAck"))))
		)
	)
	(or (ack1 "out") (ack1 (each "inp")))
)
(connections
	(connect (req "out") (req "index"))
)
