(nodes
	("elseAck" 1 0 1)
	("inpComplete" (param "inputWidth") 0 1)
	("inpDone" 1 0 1)
	("outDone" 1 0 1)
)
(gates
	(or (node "inpComplete") (req0 "inp") (req1 "inp"))
	(c-element (node "inpDone") (smash (node "inpComplete")))
	(if (complete-encoding? (param "specification") (param "inputWidth"))
		(gates
			(if (style-option "m-of-n-mapping")
				(decode (c-or m-of-n-mapping dual-rail-implicant-mapping)
					(param "specification")
					(param "inputWidth")
					((req0 "inp") (req1 "inp"))
					((req (each "activateOut")))	
				)
				(decode c-or 
					(param "specification")
					(req0 "inp") (req1 "inp")
					(req (each "activateOut"))
				)
			)
			(or (node "outDone") (ack (each "activateOut")))
		)
		(gates
			(if (style-option "m-of-n-mapping")
				(decode (c-or m-of-n-mapping dual-rail-implicant-mapping) 
					(param "specification")
					(param "inputWidth")
					((req0 "inp") (req1 "inp"))
					((combine (req (each "activateOut")) (node "elseAck")))
				)
				(decode c-or 
					(param "specification")
					(req0 "inp") (req1 "inp")
					(req (each "activateOut"))
					(node "elseAck")
				)
			)
			(or (node "outDone") (ack (each "activateOut")) (node "elseAck"))
		)
	)
	(c-element (ack "inp") (node "outDone") (node "inpDone"))
)
